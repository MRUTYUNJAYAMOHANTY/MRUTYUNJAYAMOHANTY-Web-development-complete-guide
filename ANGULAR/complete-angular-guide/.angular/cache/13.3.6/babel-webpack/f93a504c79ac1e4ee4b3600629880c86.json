{"ast":null,"code":"export class CustomValidators {\n  static invalidProjectName(control) {\n    if (control.value === 'Test') {\n      return {\n        'invalidProjectName': true\n      };\n    }\n\n    return null;\n  }\n\n  static asyncInvalidProjectName(control) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (control.value === 'Testproject') {\n          resolve({\n            'invalidProjectName': true\n          });\n        } else {\n          resolve(null);\n        }\n      }, 2000);\n    });\n    return promise;\n  }\n\n}","map":{"version":3,"names":["CustomValidators","invalidProjectName","control","value","asyncInvalidProjectName","promise","Promise","resolve","reject","setTimeout"],"sources":["D:/Open-source/ANGULAR/complete-angular-guide/projects/forms/src/app/ReactiveForm/Practicing/practice-reactive/custom-validators.ts"],"sourcesContent":["export class CustomValidators {\r\n    static invalidProjectName(control) {\r\n        if (control.value === 'Test') {\r\n            return { 'invalidProjectName': true };\r\n        }\r\n        return null;\r\n    }\r\n    static asyncInvalidProjectName(control) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (control.value === 'Testproject') {\r\n                    resolve({ 'invalidProjectName': true });\r\n                }\r\n                else {\r\n                    resolve(null);\r\n                }\r\n            }, 2000);\r\n        });\r\n        return promise;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAN,CAAuB;EACD,OAAlBC,kBAAkB,CAACC,OAAD,EAAU;IAC/B,IAAIA,OAAO,CAACC,KAAR,KAAkB,MAAtB,EAA8B;MAC1B,OAAO;QAAE,sBAAsB;MAAxB,CAAP;IACH;;IACD,OAAO,IAAP;EACH;;EAC6B,OAAvBC,uBAAuB,CAACF,OAAD,EAAU;IACpC,MAAMG,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MAC7CC,UAAU,CAAC,MAAM;QACb,IAAIP,OAAO,CAACC,KAAR,KAAkB,aAAtB,EAAqC;UACjCI,OAAO,CAAC;YAAE,sBAAsB;UAAxB,CAAD,CAAP;QACH,CAFD,MAGK;UACDA,OAAO,CAAC,IAAD,CAAP;QACH;MACJ,CAPS,EAOP,IAPO,CAAV;IAQH,CATe,CAAhB;IAUA,OAAOF,OAAP;EACH;;AAnByB"},"metadata":{},"sourceType":"module"}